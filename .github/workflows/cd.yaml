name: Continuous Deployment

on:
  workflow_call:
    inputs:
      s3-folder-name:
        required: true
        type: string
        description: "Name of S3 key folder path"
      src-file-dir:
        required: true
        type: string
        description: "Path to directory where source file is"
      src-file-name:
        required: true
        type: string
        description: "Name of source file without extension"
      lambda-name:
        required: true
        type: string
        description: "Name of lambda function"

env:
  SG_S3_BUCKET_NAME: lambda-archive-g1t1-singapore
  NV_S3_BUCKET_NAME: lambda-archive-g1t1-north-virginia
  S3_FOLDER_NAME: ${{ inputs.s3-folder-name }}
  SRC_FILE_DIR: ${{ inputs.src-file-dir }}
  SRC_FILE_NAME: ${{ inputs.src-file-name }}
  LAMBDA_NAME: ${{ inputs.lambda-name }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Create Build folder
        run: |
          rm -rf build
          mkdir build
          
      - name: Zip Code Files
        run: |
          cd ${{ env.SRC_FILE_DIR }}
          zip ../../build/${{ env.S3_FOLDER_NAME }}-${{ github.run_id }}.zip ${{ env.SRC_FILE_NAME }}.py

      - name: Create Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: build/

  deploy-sg:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: Download Artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: build-files

      - name: List all files
        run: ls -R

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Upload to S3
        run: |
          echo "Update Singapore S3"
          aws s3 cp ${{ env.S3_FOLDER_NAME }}-${{ github.run_id }}.zip s3://${{ env.SG_S3_BUCKET_NAME }}/${{ env.S3_FOLDER_NAME }}/${{ github.run_id }}.zip
      - name: Update lambda function code
        run: |
          echo "Update Singapore Lambda Function"
          aws lambda update-function-code --function-name ${{ env.LAMBDA_NAME }} --s3-bucket ${{ env.SG_S3_BUCKET_NAME }} --s3-key ${{ env.S3_FOLDER_NAME }}/${{ github.run_id }}.zip

      - name: Sleep for 5 seconds
        run: sleep 5s
        shell: bash

      - name: Release lambda function version
        run: |
          aws lambda publish-version --function-name ${{ env.LAMBDA_NAME }} --description ${{ github.run_id }}

  deploy-nv:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3

      - name: Download Artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: build-files

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Upload to S3
        run: |
          echo "Update North Virginia S3"
          aws s3 cp ${{ env.S3_FOLDER_NAME }}-${{ github.run_id }}.zip s3://${{ env.NV_S3_BUCKET_NAME }}/${{ env.S3_FOLDER_NAME }}/${{ github.run_id }}.zip

      - name: Update lambda function code
        run: |
          echo "Update North Virginia Lambda Function"
          aws lambda update-function-code --function-name ${{ env.LAMBDA_NAME }} --s3-bucket ${{ env.NV_S3_BUCKET_NAME }} --s3-key ${{ env.S3_FOLDER_NAME }}/${{ github.run_id }}.zip

      - name: Sleep for 5 seconds
        run: sleep 5s
        shell: bash

      - name: Release lambda function version
        run: |
          aws lambda publish-version --function-name ${{ env.LAMBDA_NAME }} --description ${{ github.run_id }}
